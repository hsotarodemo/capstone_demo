---
AWSTemplateFormatVersion: 2010-09-09

Description: Capstone

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Default: vpc-a6e909c0    
  VpcSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Default: sg-83d232cc
  BastionImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-ebs
  BastionKeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: EC2 key used to connect to the bastion host
    Default: cloudformation_capstore

Resources:

  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: !Sub 'Bastion for ${AWS::StackName}'
      SecurityGroupEgress:
        - CidrIp: 10.0.0.0/0
          FromPort: 22
          ToPort: 22
          IpProtocol: 'tcp'
          Description: 'some rule description'
        - DestinationSecurityGroupId: !Ref VpcSecurityGroupId
          IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          Description: 'some rule description'
      SecurityGroupIngress: []
      VpcId: !Ref VpcId

  Bastion:
    Type: AWS::EC2::Instance
    Properties:
      DisableApiTermination: true
      ImageId: !Ref BastionImageId
      InstanceType: t2.nano
      KeyName: !Ref BastionKeyName
      Monitoring: false
      SecurityGroupIds:
        - !Ref VpcSecurityGroupId
        - !Ref BastionSecurityGroup
      UserData: !Base64 'yum install mysql --assumeyes'

Outputs:
  BastionHost:
    Value: !GetAtt Bastion.PublicDnsName
    Export:
      Name: !Sub '${AWS::StackName}BastionHost'
  BastionIp:
    Value: !GetAtt Bastion.PublicIp
    Export:
      Name: !Sub '${AWS::StackName}BastionIp'
  BastionSecurityGroupId:
    Value: !GetAtt BastionSecurityGroup.GroupId
    Export:
      Name: !Sub '${AWS::StackName}BastionSecurityGroupId'
